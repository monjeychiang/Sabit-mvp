#!/usr/bin/env node
import { a as a$1 } from './chunk-63R22Q5C.js';
import { I, W, M, q, a, s, n, h, o, r, i, K as K$1, N, e, f, c, d, g, p, J, C, B as B$1, Q as Q$1, O, R, j, U, t, X as X$1, S as S$1, Z as Z$1, Y, l, k, u, v, L as L$1, m, b } from './chunk-26TTVK5I.js';
export { I as BASE_COLORS, T as clearRegistryCache, S as fetchRegistry, Q as fetchTree, R as getItemTargetPath, O as getRegistryBaseColor, N as getRegistryBaseColors, L as getRegistryIcons, J as getRegistryIndex, M as getRegistryItem, Z as getRegistryParentMap, K as getRegistryStyles, Y as getRegistryTypeAliasMap, W as isUrl, V as registryGetTheme, U as registryResolveItemsTree, X as resolveRegistryItems, P as resolveTree } from './chunk-26TTVK5I.js';
import * as S from 'path';
import S__default, { basename } from 'path';
import { promises, existsSync } from 'fs';
import Z from 'fs-extra';
import v$1 from 'postcss';
import kr from 'postcss/lib/at-rule';
import { z } from 'zod';
import { detect } from '@antfu/ni';
import { execa } from 'execa';
import Qe from 'prompts';
import vi, { tmpdir } from 'os';
import { Project, ScriptKind, SyntaxKind } from 'ts-morph';
import { transformFromAstSync } from '@babel/core';
import { parse } from '@babel/parser';
import Qr from '@babel/plugin-transform-typescript';
import * as Pe from 'recast';
import { loadConfig } from 'tsconfig-paths';
import { Command } from 'commander';
import * as B from 'fs/promises';
import B__default from 'fs/promises';
import { diffLines } from 'diff';
import { randomBytes } from 'crypto';
import Hi from 'fast-glob';
import { StdioServerTransport } from '@modelcontextprotocol/sdk/server/stdio.js';

var A="1";var _="3";var se="5",Ue="6",Tt="7";var H="13";async function Ot(e){let t={};if(!Z.existsSync(e.cwd)||!Z.existsSync(S__default.resolve(e.cwd,"package.json")))return t[A]=!0,{errors:t,projectInfo:null};let r$1=r("Preflight checks.",{silent:e.silent}).start();Z.existsSync(S__default.resolve(e.cwd,"components.json"))&&!e.force&&(r$1?.fail(),q.break(),q.error(`A ${a.info("components.json")} file already exists at ${a.info(e.cwd)}.
To start over, remove the ${a.info("components.json")} file and run ${a.info("init")} again.`),q.break(),process.exit(1)),r$1?.succeed();let i=r("Verifying framework.",{silent:e.silent}).start(),o=await n(e.cwd);(!o||o?.framework.name==="manual")&&(t[Tt]=!0,i?.fail(),q.break(),o?.framework.links.installation&&q.error(`We could not detect a supported framework at ${a.info(e.cwd)}.
Visit ${a.info(o?.framework.links.installation)} to manually configure your project.
Once configured, you can use the cli to add components.`),q.break(),process.exit(1)),i?.succeed(`Verifying framework. Found ${a.info(o.framework.label)}.`);let n$1="Validating Tailwind CSS.";o.tailwindVersion==="v4"&&(n$1=`Validating Tailwind CSS config. Found ${a.info("v4")}.`);let a$1=r(n$1,{silent:e.silent}).start();o.tailwindVersion==="v3"&&(!o?.tailwindConfigFile||!o?.tailwindCssFile)?(t[se]=!0,a$1?.fail()):o.tailwindVersion==="v4"&&!o?.tailwindCssFile?(t[se]=!0,a$1?.fail()):o.tailwindVersion?a$1?.succeed():(t[se]=!0,a$1?.fail());let s=r("Validating import alias.",{silent:e.silent}).start();return o?.aliasPrefix?s?.succeed():(t[Ue]=!0,s?.fail()),Object.keys(t).length>0&&(t[se]&&(q.break(),q.error(`No Tailwind CSS configuration found at ${a.info(e.cwd)}.`),q.error("It is likely you do not have Tailwind CSS installed or have an invalid configuration."),q.error("Install Tailwind CSS then try again."),o?.framework.links.tailwind&&q.error(`Visit ${a.info(o?.framework.links.tailwind)} to get started.`)),t[Ue]&&(q.break(),q.error("No import alias found in your tsconfig.json file."),o?.framework.links.installation&&q.error(`Visit ${a.info(o?.framework.links.installation)} to learn how to set an import alias.`)),q.break(),process.exit(1)),{errors:t,projectInfo:o}}async function Ge(e,t,r$1){if(!t.resolvedPaths.tailwindCss||!e||Object.keys(e).length===0)return;r$1={silent:!1,...r$1};let i=t.resolvedPaths.tailwindCss,o=S__default.relative(t.resolvedPaths.cwd,i),n=r(`Updating ${a.info(o)}`,{silent:r$1.silent}).start(),a$1=await promises.readFile(i,"utf8"),s=await Ir(a$1,e);await promises.writeFile(i,s,"utf8"),n.succeed();}async function Ir(e,t){let r=[Pr(t)],o=(await v$1(r).process(e,{from:void 0})).css;return o=o.replace(/\/\* ---break--- \*\//g,""),o=o.replace(/(\n\s*\n)+/g,`

`),o=o.trimEnd(),o}function Pr(e){return {postcssPlugin:"update-css",Once(t){for(let[r,i]of Object.entries(e))if(r.startsWith("@")){let o=r.match(/@([a-zA-Z-]+)\s*(.*)/);if(!o)continue;let[,n,a]=o;if(n==="keyframes"){let s=t.nodes?.find(l=>l.type==="atrule"&&l.name==="theme"&&l.params==="inline");s||(s=v$1.atRule({name:"theme",params:"inline",raws:{semicolon:!0,between:" ",before:`
`}}),t.append(s),t.insertBefore(s,v$1.comment({text:"---break---"})));let c=v$1.atRule({name:"keyframes",params:a,raws:{semicolon:!0,between:" ",before:`
  `}});if(s.append(c),typeof i=="object")for(let[l,m]of Object.entries(i))re(c,l,m);}else if(n==="utility"){let s=t.nodes?.find(c=>c.type==="atrule"&&c.name===n&&c.params===a);if(s){if(typeof i=="object")for(let[c,l]of Object.entries(i))if(typeof l=="string"){let m=s.nodes?.find(u=>u.type==="decl"&&u.prop===c),f=v$1.decl({prop:c,value:l,raws:{semicolon:!0,before:`
    `}});m?m.replaceWith(f):s.append(f);}else typeof l=="object"&&re(s,c,l);}else {let c=v$1.atRule({name:n,params:a,raws:{semicolon:!0,between:" ",before:`
`}});if(t.append(c),t.insertBefore(c,v$1.comment({text:"---break---"})),typeof i=="object")for(let[l,m]of Object.entries(i))if(typeof m=="string"){let f=v$1.decl({prop:l,value:m,raws:{semicolon:!0,before:`
    `}});c.append(f);}else typeof m=="object"&&re(c,l,m);}}else Dt(t,n,a,i);}else re(t,r,i);}}}function Dt(e,t,r,i){let o=e.nodes?.find(n=>n.type==="atrule"&&n.name===t&&n.params===r);if(o||(o=v$1.atRule({name:t,params:r,raws:{semicolon:!0,between:" ",before:`
`}}),e.append(o),e.insertBefore(o,v$1.comment({text:"---break---"}))),typeof i=="object")for(let[n,a]of Object.entries(i))if(n.startsWith("@")){let s=n.match(/@([a-zA-Z-]+)\s*(.*)/);if(s){let[,c,l]=s;Dt(o,c,l,a);}}else re(o,n,a);else if(typeof i=="string")try{let a=v$1.parse(`.temp{${i}}`).first;if(a&&a.nodes){let s=v$1.rule({selector:"temp",raws:{semicolon:!0,between:" ",before:`
  `}});a.nodes.forEach(c=>{if(c.type==="decl"){let l=c.clone();l.raws.before=`
    `,s.append(l);}}),s.nodes?.length&&o.append(s);}}catch(n){throw console.error("Error parsing at-rule content:",i,n),n}}function re(e,t,r){let i=e.nodes?.find(o=>o.type==="rule"&&o.selector===t);if(i||(i=v$1.rule({selector:t,raws:{semicolon:!0,between:" ",before:`
  `}}),e.append(i)),typeof r=="object"){for(let[o,n]of Object.entries(r))if(typeof n=="string"){let a=v$1.decl({prop:o,value:n,raws:{semicolon:!0,before:`
    `}}),s=i.nodes?.find(c=>c.type==="decl"&&c.prop===o);s?s.replaceWith(a):i.append(a);}else if(typeof n=="object"){let a=o.startsWith("&")?t.replace(/^([^:]+)/,`$1${o.substring(1)}`):o;re(e,a,n);}}else if(typeof r=="string")try{let n=v$1.parse(`.temp{${r}}`).first;n&&n.nodes&&n.nodes.forEach(a=>{if(a.type==="decl"){let s=a.clone();s.raws.before=`
    `,i?.append(s);}});}catch(o){throw console.error("Error parsing rule content:",t,r,o),o}}async function Je(e,t,r$1){if(!t.resolvedPaths.tailwindCss||!Object.keys(e??{}).length)return;r$1={cleanupDefaultNextStyles:!1,silent:!1,tailwindVersion:"v3",overwriteCssVars:!1,initIndex:!0,...r$1};let i=t.resolvedPaths.tailwindCss,o=S__default.relative(t.resolvedPaths.cwd,i),n=r(`Updating CSS variables in ${a.info(o)}`,{silent:r$1.silent}).start(),a$1=await promises.readFile(i,"utf8"),s=await jr(a$1,e??{},t,{cleanupDefaultNextStyles:r$1.cleanupDefaultNextStyles,tailwindVersion:r$1.tailwindVersion,tailwindConfig:r$1.tailwindConfig,overwriteCssVars:r$1.overwriteCssVars,initIndex:r$1.initIndex});await promises.writeFile(i,s,"utf8"),n.succeed();}async function jr(e,t,r,i={cleanupDefaultNextStyles:!1,tailwindVersion:"v3",tailwindConfig:void 0,overwriteCssVars:!1,initIndex:!0}){i={cleanupDefaultNextStyles:!1,tailwindVersion:"v3",tailwindConfig:void 0,overwriteCssVars:!1,initIndex:!0,...i};let o=[Tr(t)];if(i.cleanupDefaultNextStyles&&o.push(_t()),i.tailwindVersion==="v4"){if(o=[],r.resolvedPaths?.cwd){let s=m(r.resolvedPaths.cwd);!s?.dependencies?.["tailwindcss-animate"]&&!s?.devDependencies?.["tailwindcss-animate"]&&i.initIndex&&o.push(Fr({params:"tw-animate-css"}));}o.push(Dr({params:"dark (&:is(.dark *))"})),i.cleanupDefaultNextStyles&&o.push(_t()),o.push(Or(t,{overwriteCssVars:i.overwriteCssVars})),o.push(Nr(t)),i.tailwindConfig&&(o.push(Ar(i.tailwindConfig)),o.push(Lr(i.tailwindConfig)),o.push(_r(i.tailwindConfig)));}r.tailwind.cssVariables&&i.initIndex&&o.push(Er({tailwindVersion:i.tailwindVersion}));let a=(await v$1(o).process(e,{from:void 0})).css;return a=a.replace(/\/\* ---break--- \*\//g,""),i.tailwindVersion==="v4"&&(a=a.replace(/(\n\s*\n)+/g,`

`)),a}function Er({tailwindVersion:e}){return {postcssPlugin:"update-base-layer",Once(t){let r=[{selector:"*",apply:e==="v4"?"border-border outline-ring/50":"border-border"},{selector:"body",apply:"bg-background text-foreground"}],i=t.nodes.find(o=>o.type==="atrule"&&o.name==="layer"&&o.params==="base"&&r.every(({selector:n,apply:a})=>o.nodes?.some(s=>s.type==="rule"&&s.selector===n&&s.nodes.some(c=>c.type==="atrule"&&c.name==="apply"&&c.params===a))));i||(i=v$1.atRule({name:"layer",params:"base",raws:{semicolon:!0,between:" ",before:`
`}}),t.append(i),t.insertBefore(i,v$1.comment({text:"---break---"}))),r.forEach(({selector:o,apply:n})=>{i?.nodes?.find(s=>s.type==="rule"&&s.selector===o)||i?.append(v$1.rule({selector:o,nodes:[v$1.atRule({name:"apply",params:n,raws:{semicolon:!0,before:`
    `}})],raws:{semicolon:!0,between:" ",before:`
  `}}));});}}}function Tr(e){return {postcssPlugin:"update-css-vars",Once(t){let r=t.nodes.find(i=>i.type==="atrule"&&i.name==="layer"&&i.params==="base");r instanceof kr||(r=v$1.atRule({name:"layer",params:"base",nodes:[],raws:{semicolon:!0,before:`
`,between:" "}}),t.append(r),t.insertBefore(r,v$1.comment({text:"---break---"}))),r!==void 0&&Object.entries(e).forEach(([i,o])=>{let n=i==="light"?":root":`.${i}`;$r(r,n,o);});}}}function At(e){let t=e.nodes.find(r=>r.type==="rule"&&r.selector===":root");if(t){let r=["--background","--foreground"];t.nodes.filter(i=>i.type==="decl"&&r.includes(i.prop)).forEach(i=>i.remove()),t.nodes.length===0&&t.remove();}}function _t(){return {postcssPlugin:"cleanup-default-next-styles",Once(e){let t=e.nodes.find(i=>i.type==="rule"&&i.selector==="body");t&&(t.nodes.find(i=>i.type==="decl"&&i.prop==="color"&&["rgb(var(--foreground-rgb))","var(--foreground)"].includes(i.value))?.remove(),t.nodes.find(i=>i.type==="decl"&&i.prop==="background"&&(i.value.startsWith("linear-gradient")||i.value==="var(--background)"))?.remove(),t.nodes.find(i=>i.type==="decl"&&i.prop==="font-family"&&i.value==="Arial, Helvetica, sans-serif")?.remove(),t.nodes.length===0&&t.remove()),At(e);let r=e.nodes.find(i=>i.type==="atrule"&&i.params==="(prefers-color-scheme: dark)");r&&(At(r),r.nodes.length===0&&r.remove());}}}function $r(e,t,r){let i=e.nodes?.find(o=>o.type==="rule"&&o.selector===t);i||Object.keys(r).length>0&&(i=v$1.rule({selector:t,raws:{between:" ",before:`
  `}}),e.append(i)),Object.entries(r).forEach(([o,n])=>{let a=`--${o.replace(/^--/,"")}`,s=v$1.decl({prop:a,value:n,raws:{semicolon:!0}}),c=i?.nodes.find(l=>l.type==="decl"&&l.prop===a);c?c.replaceWith(s):i?.append(s);});}function Or(e,t){return {postcssPlugin:"update-css-vars-v4",Once(r){Object.entries(e).forEach(([i,o])=>{let n=i==="light"?":root":`.${i}`;if(i==="theme"){n="@theme";let s=be(r);Object.entries(o).forEach(([c,l])=>{let m=`--${c.replace(/^--/,"")}`,f=v$1.decl({prop:m,value:l,raws:{semicolon:!0}}),u=s?.nodes?.find(g=>g.type==="decl"&&g.prop===m);t.overwriteCssVars?u?u.replaceWith(f):s?.append(f):u||s?.append(f);});return}let a=r.nodes?.find(s=>s.type==="rule"&&s.selector===n);!a&&Object.keys(o).length>0&&(a=v$1.rule({selector:n,nodes:[],raws:{semicolon:!0,between:" ",before:`
`}}),r.append(a),r.insertBefore(a,v$1.comment({text:"---break---"}))),Object.entries(o).forEach(([s,c])=>{let l=`--${s.replace(/^--/,"")}`;l==="--sidebar-background"&&(l="--sidebar"),Lt(c)&&(c=`hsl(${c})`);let m=v$1.decl({prop:l,value:c,raws:{semicolon:!0}}),f=a?.nodes.find(u=>u.type==="decl"&&u.prop===l);t.overwriteCssVars?f?f.replaceWith(m):a?.append(m):f||a?.append(m);});});}}}function Nr(e){return {postcssPlugin:"update-theme",Once(t){let r=Array.from(new Set(Object.keys(e).flatMap(n=>Object.keys(e[n]||{}))));if(!r.length)return;let i=be(t),o=i.nodes?.filter(n=>n.type==="decl"&&n.prop.startsWith("--"));for(let n of r){let a=Object.values(e).find(f=>f[n])?.[n];if(!a)continue;if(n==="radius"){let f={sm:"calc(var(--radius) - 4px)",md:"calc(var(--radius) - 2px)",lg:"var(--radius)",xl:"calc(var(--radius) + 4px)"};for(let[u,g]of Object.entries(f)){let y=v$1.decl({prop:`--radius-${u}`,value:g,raws:{semicolon:!0}});i?.nodes?.find(h=>h.type==="decl"&&h.prop===y.prop)||i?.append(y);}continue}let s=Lt(a)||Mr(a)?`--color-${n.replace(/^--/,"")}`:`--${n.replace(/^--/,"")}`;s==="--color-sidebar-background"&&(s="--color-sidebar");let c=`var(--${n})`;s==="--color-sidebar"&&(c="var(--sidebar)");let l=v$1.decl({prop:s,value:c,raws:{semicolon:!0}});i?.nodes?.find(f=>f.type==="decl"&&f.prop===l.prop)||(o?.length?i?.insertAfter(o[o.length-1],l):i?.append(l));}}}}function be(e){let t=e.nodes.find(r=>r.type==="atrule"&&r.name==="theme"&&r.params==="inline");return t||(t=v$1.atRule({name:"theme",params:"inline",nodes:[],raws:{semicolon:!0,between:" ",before:`
`}}),e.append(t),e.insertBefore(t,v$1.comment({text:"---break---"}))),t}function Dr({params:e}){return {postcssPlugin:"add-custom-variant",Once(t){if(!t.nodes.find(i=>i.type==="atrule"&&i.name==="custom-variant")){let i=t.nodes.filter(n=>n.type==="atrule"&&n.name==="import"),o=v$1.atRule({name:"custom-variant",params:e,raws:{semicolon:!0,before:`
`}});if(i.length>0){let n=i[i.length-1];t.insertAfter(n,o);}else t.insertAfter(t.nodes[0],o);t.insertBefore(o,v$1.comment({text:"---break---"}));}}}}function Fr({params:e}){return {postcssPlugin:"add-custom-import",Once(t){let r=t.nodes.filter(n=>n.type==="atrule"&&n.name==="import"),i=t.nodes.find(n=>n.type==="atrule"&&n.name==="custom-variant");if(!r.some(n=>n.params.replace(/["']/g,"")===e)){let n=v$1.atRule({name:"import",params:`"${e}"`,raws:{semicolon:!0,before:`
`}});if(r.length>0){let a=r[r.length-1];t.insertAfter(a,n);}else i?(t.insertBefore(i,n),t.insertBefore(i,v$1.comment({text:"---break---"}))):(t.prepend(n),t.insertAfter(n,v$1.comment({text:"---break---"})));}}}}function Ar(e){return {postcssPlugin:"update-tailwind-config",Once(t){if(!e?.plugins)return;let i=Vr(t)==="single"?"'":'"',o=t.nodes.filter(a=>a.type==="atrule"&&a.name==="plugin"),n=o[o.length-1]||t.nodes[0];for(let a of e.plugins){let s=a.replace(/^require\(["']|["']\)$/g,"");if(o.some(l=>l.params.replace(/["']/g,"")===s))continue;let c=v$1.atRule({name:"plugin",params:`${i}${s}${i}`,raws:{semicolon:!0,before:`
`}});t.insertAfter(n,c),t.insertBefore(c,v$1.comment({text:"---break---"}));}}}}function _r(e){return {postcssPlugin:"update-tailwind-config-keyframes",Once(t){if(!e?.theme?.extend?.keyframes)return;let r=be(t),i=r.nodes?.filter(n=>n.type==="atrule"&&n.name==="keyframes"),o=z.record(z.string(),z.record(z.string(),z.string()));for(let[n,a]of Object.entries(e.theme.extend.keyframes)){if(typeof n!="string")continue;let s=o.safeParse(a);if(!s.success||i?.find(l=>l.type==="atrule"&&l.name==="keyframes"&&l.params===n))continue;let c=v$1.atRule({name:"keyframes",params:n,nodes:[],raws:{semicolon:!0,between:" ",before:`
  `}});for(let[l,m]of Object.entries(s.data)){let f=v$1.rule({selector:l,nodes:Object.entries(m).map(([u,g])=>v$1.decl({prop:u,value:g,raws:{semicolon:!0,before:`
      `,between:": "}})),raws:{semicolon:!0,between:" ",before:`
    `}});c.append(f);}r.append(c),r.insertBefore(c,v$1.comment({text:"---break---"}));}}}}function Lr(e){return {postcssPlugin:"update-tailwind-config-animation",Once(t){if(!e?.theme?.extend?.animation)return;let r=be(t),i=r.nodes?.filter(n=>n.type==="decl"&&n.prop.startsWith("--animate-")),o=z.record(z.string(),z.string()).safeParse(e.theme.extend.animation);if(o.success)for(let[n,a]of Object.entries(o.data)){let s=`--animate-${n}`;if(i?.find(l=>l.prop===s))continue;let c=v$1.decl({prop:s,value:a,raws:{semicolon:!0,between:": ",before:`
  `}});r.append(c);}}}}function Vr(e){return e.nodes[0].toString().includes("'")?"single":"double"}function Lt(e){if(e.startsWith("hsl")||e.startsWith("rgb")||e.startsWith("#")||e.startsWith("oklch"))return !1;let t=e.split(" ");return t.length===3&&t.slice(1,3).every(r=>r.includes("%"))}function Mr(e){return e.startsWith("hsl")||e.startsWith("rgb")||e.startsWith("#")||e.startsWith("oklch")}async function Se(e,{withFallback:t}={withFallback:!1}){let r=await detect({programmatic:!0,cwd:e});if(r==="yarn@berry")return "yarn";if(r==="pnpm@6")return "pnpm";if(r==="bun")return "bun";if(r==="deno")return "deno";if(!t)return r??"npm";let i=process.env.npm_config_user_agent||"";return i.startsWith("yarn")?"yarn":i.startsWith("pnpm")?"pnpm":i.startsWith("bun")?"bun":"npm"}async function X(e,t,r$1,i){if(e=Array.from(new Set(e)),t=Array.from(new Set(t)),!e?.length&&!t?.length)return;i={silent:!1,...i};let o=r("Installing dependencies.",{silent:i.silent})?.start(),n=await Se(r$1.resolvedPaths.cwd),a="";if(Br(r$1)&&n==="npm")if(i.silent)a="force";else {o.stopAndPersist(),q.warn(`
It looks like you are using React 19. 
Some packages may fail to install due to peer dependency issues in npm (see https://ui.shadcn.com/react-19).
`);let s=await Qe([{type:"select",name:"flag",message:"How would you like to proceed?",choices:[{title:"Use --force",value:"force"},{title:"Use --legacy-peer-deps",value:"legacy-peer-deps"}]}]);s&&(a=s.flag);}o?.start(),e?.length&&await execa(n,[n==="npm"?"install":"add",...n==="npm"&&a?[`--${a}`]:[],...n==="deno"?e.map(s=>`npm:${s}`):e],{cwd:r$1.resolvedPaths.cwd}),t?.length&&await execa(n,[n==="npm"?"install":"add",...n==="npm"&&a?[`--${a}`]:[],"-D",...n==="deno"?t.map(s=>`npm:${s}`):t],{cwd:r$1.resolvedPaths.cwd}),o?.succeed();}function Br(e){let t=m(e.resolvedPaths.cwd,!1);if(!t?.dependencies?.react)return !1;let r=/^(?:\^|~)?19(?:\.\d+)*(?:-.*)?$/.test(t.dependencies.react),i=t.dependencies["react-day-picker"]?.startsWith("8");return r&&i}var Re=async({sourceFile:e,config:t,baseColor:r})=>(t.tailwind?.cssVariables||!r?.inlineColors||e.getDescendantsOfKind(SyntaxKind.StringLiteral).forEach(i=>{let o=i.getText();if(o){let n=Gr(o.replace(/"/g,""),r.inlineColors);i.replaceWithText(`"${n.trim()}"`);}}),e);function Ye(e){if(!e.includes("/")&&!e.includes(":"))return [null,e,null];let t=[],[r,i]=e.split("/");if(!r.includes(":"))return [null,r,i];let o=r.split(":"),n=o.pop(),a=o.join(":");return t.push(a??null,n??null,i??null),t}var Kr=["bg-","text-","border-","ring-offset-","ring-"];function Gr(e,t){e.includes(" border ")&&(e=e.replace(" border "," border border-border "));let r=e.split(" "),i=new Set,o=new Set;for(let n of r){let[a,s,c]=Ye(n),l=Kr.find(f=>s?.startsWith(f));if(!l){i.has(n)||i.add(n);continue}let m=s?.replace(l,"");if(m&&m in t.light){i.add([a,`${l}${t.light[m]}`].filter(Boolean).join(":")+(c?`/${c}`:"")),o.add(["dark",a,`${l}${t.dark[m]}`].filter(Boolean).join(":")+(c?`/${c}`:""));continue}i.has(n)||i.add(n);}return [...Array.from(i),...Array.from(o)].join(" ").trim()}var L={lucide:{name:"lucide-react",package:"lucide-react",import:"lucide-react"},radix:{name:"@radix-ui/react-icons",package:"@radix-ui/react-icons",import:"@radix-ui/react-icons"}};var Mt="lucide",ve=async({sourceFile:e,config:t})=>{if(!t.iconLibrary||!(t.iconLibrary in L))return e;let r=await L$1(),i=Mt,o=t.iconLibrary;if(i===o)return e;let n=[];for(let a of e.getImportDeclarations()??[])if(a.getModuleSpecifier()?.getText()===`"${L[Mt].import}"`){for(let s of a.getNamedImports()??[]){let c=s.getName(),l=r[c]?.[o];!l||n.includes(l)||(n.push(l),s.remove(),e.getDescendantsOfKind(SyntaxKind.JsxSelfClosingElement).filter(m=>m.getTagNameNode()?.getText()===c).forEach(m=>m.getTagNameNode()?.replaceWithText(l)));}a.getNamedImports()?.length===0&&a.remove();}if(n.length>0){let a=e.addImportDeclaration({moduleSpecifier:L[o]?.import,namedImports:n.map(s=>({name:s}))});Yr(e)||a.replaceWithText(a.getText().replace(";",""));}return e};function Yr(e){return e.getImportDeclarations()?.[0]?.getText().endsWith(";")??!1}var Ie=async({sourceFile:e,config:t,isRemote:r})=>{let o=`@${t.aliases?.utils?.split("/")[0]?.slice(1)}/lib/utils`,n=e.getImportDeclarations();if(![".tsx",".ts",".jsx",".js"].includes(e.getExtension()))return e;for(let a of n){let s=qr(a.getModuleSpecifierValue(),t,r);a.setModuleSpecifier(s),(o===s||s==="@/lib/utils")&&a.getNamedImports().find(m=>m.getName()==="cn")&&a.setModuleSpecifier(o===s?s.replace(o,t.aliases.utils):t.aliases.utils);}return e};function qr(e,t,r=!1){if(!e.startsWith("@/")&&!r)return e;if(r&&e.startsWith("@/")&&(e=e.replace(/^@\//,"@/registry/new-york/")),!e.startsWith("@/registry/")){let i=t.aliases.components.split("/")[0];return e.replace(/^@\//,`${i}/`)}return e.match(/^@\/registry\/(.+)\/ui/)?e.replace(/^@\/registry\/(.+)\/ui/,t.aliases.ui??`${t.aliases.components}/ui`):t.aliases.components&&e.match(/^@\/registry\/(.+)\/components/)?e.replace(/^@\/registry\/(.+)\/components/,t.aliases.components):t.aliases.lib&&e.match(/^@\/registry\/(.+)\/lib/)?e.replace(/^@\/registry\/(.+)\/lib/,t.aliases.lib):t.aliases.hooks&&e.match(/^@\/registry\/(.+)\/hooks/)?e.replace(/^@\/registry\/(.+)\/hooks/,t.aliases.hooks):e.replace(/^@\/registry\/[^/]+/,t.aliases.components)}var Zr={sourceType:"module",allowImportExportEverywhere:!0,allowReturnOutsideFunction:!0,startLine:1,tokens:!0,plugins:["asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","classStaticBlock","decimal","decorators-legacy","doExpressions","dynamicImport","exportDefaultFrom","exportNamespaceFrom","functionBind","functionSent","importAssertions","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{proposal:"minimal"}],["recordAndTuple",{syntaxType:"hash"}],"throwExpressions","topLevelAwait","v8intrinsic","typescript","jsx"]},zt=async({sourceFile:e,config:t})=>{let r=e.getFullText();if(t.tsx)return r;let i=Pe.parse(r,{parser:{parse:n=>parse(n,Zr)}}),o=transformFromAstSync(i,r,{cloneInputAst:!1,code:!1,ast:!0,plugins:[Qr],configFile:!1});if(!o||!o.ast)throw new Error("Failed to transform JSX");return Pe.print(o.ast).code};var ti=/^["']use client["']$/g,Ce=async({sourceFile:e,config:t})=>{if(t.rsc)return e;let r=e.getFirstChildByKind(SyntaxKind.ExpressionStatement);return r&&ti.test(r.getText())&&r.remove(),e};var ke=async({sourceFile:e,config:t})=>{if(!t.tailwind?.prefix)return e;let r=await p(t);return e.getDescendantsOfKind(SyntaxKind.CallExpression).filter(i=>i.getExpression().getText()==="cva").forEach(i=>{if(i.getArguments()[0]?.isKind(SyntaxKind.StringLiteral)){let o=i.getArguments()[0];o&&o.replaceWithText(`"${K(o.getText()?.replace(/"|'/g,""),t.tailwind.prefix,r)}"`);}i.getArguments()[1]?.isKind(SyntaxKind.ObjectLiteralExpression)&&i.getArguments()[1]?.getDescendantsOfKind(SyntaxKind.PropertyAssignment).find(o=>o.getName()==="variants")?.getDescendantsOfKind(SyntaxKind.PropertyAssignment).forEach(o=>{o.getDescendantsOfKind(SyntaxKind.PropertyAssignment).forEach(n=>{let a=n.getInitializerIfKind(SyntaxKind.StringLiteral);a&&a?.replaceWithText(`"${K(a.getText()?.replace(/"|'/g,""),t.tailwind.prefix,r)}"`);});});}),e.getDescendantsOfKind(SyntaxKind.JsxAttribute).forEach(i=>{if(i.getName()==="className"){if(i.getInitializer()?.isKind(SyntaxKind.StringLiteral)){let o=i.getInitializer();o&&o.replaceWithText(`"${K(o.getText()?.replace(/"|'/g,""),t.tailwind.prefix,r)}"`);}if(i.getInitializer()?.isKind(SyntaxKind.JsxExpression)){let o=i.getInitializer()?.getDescendantsOfKind(SyntaxKind.CallExpression).find(n=>n.getExpression().getText()==="cn");o&&o.getArguments().forEach(n=>{(n.isKind(SyntaxKind.ConditionalExpression)||n.isKind(SyntaxKind.BinaryExpression))&&n.getChildrenOfKind(SyntaxKind.StringLiteral).forEach(a=>{a.replaceWithText(`"${K(a.getText()?.replace(/"|'/g,""),t.tailwind.prefix,r)}"`);}),n.isKind(SyntaxKind.StringLiteral)&&n.replaceWithText(`"${K(n.getText()?.replace(/"|'/g,""),t.tailwind.prefix,r)}"`);});}}i.getName()==="classNames"&&i.getInitializer()?.isKind(SyntaxKind.JsxExpression)&&i.getDescendantsOfKind(SyntaxKind.PropertyAssignment).forEach(o=>{if(o.getInitializer()?.isKind(SyntaxKind.CallExpression)){let n=o.getInitializerIfKind(SyntaxKind.CallExpression);n&&n.getArguments().forEach(a=>{a.isKind(SyntaxKind.ConditionalExpression)&&a.getChildrenOfKind(SyntaxKind.StringLiteral).forEach(s=>{s.replaceWithText(`"${K(s.getText()?.replace(/"|'/g,""),t.tailwind.prefix,r)}"`);}),a.isKind(SyntaxKind.StringLiteral)&&a.replaceWithText(`"${K(a.getText()?.replace(/"|'/g,""),t.tailwind.prefix,r)}"`);});}if(o.getInitializer()?.isKind(SyntaxKind.StringLiteral)&&o.getName()!=="variant"){let n=o.getInitializer();n&&n.replaceWithText(`"${K(n.getText()?.replace(/"|'/g,""),t.tailwind.prefix,r)}"`);}});}),e};function K(e,t="",r){return r==="v3"?e.split(" ").map(i=>{let[o,n,a]=Ye(i);return o?a?`${o}:${t}${n}/${a}`:`${o}:${t}${n}`:a?`${t}${n}/${a}`:`${t}${n}`}).join(" "):e.split(" ").map(i=>i.indexOf(`${t}:`)===0?i:`${t}:${i.trim()}`).join(" ")}var si=new Project({compilerOptions:{}});async function ai(e){let t=await promises.mkdtemp(S__default.join(tmpdir(),"shadcn-"));return S__default.join(t,e)}async function je(e,t=[Ie,Ce,Re,ke,ve]){let r=await ai(e.filename),i=si.createSourceFile(r,e.raw,{scriptKind:ScriptKind.TSX});for(let o of t)await o({sourceFile:i,...e});return e.transformJsx?await zt({sourceFile:i,...e}):i.getText()}async function qe(e,t,r$1){if(!e?.length)return {filesCreated:[],filesUpdated:[],filesSkipped:[]};r$1={overwrite:!1,force:!1,silent:!1,isRemote:!1,...r$1};let i=r("Updating files.",{silent:r$1.silent})?.start(),[o,n$1]=await Promise.all([n(t.resolvedPaths.cwd),O(t.tailwind.baseColor)]),a$1=[],s=[],c=[];for(let u of e){if(!u.content)continue;let g=di(u,t,{isSrcDir:o?.isSrcDir,framework:o?.framework.name,commonRoot:gi(e.map(b=>b.path),u.path)});if(!g)continue;let y=basename(u.path),h=S__default.dirname(g);t.tsx||(g=g.replace(/\.tsx?$/,b=>b===".tsx"?".jsx":".js"));let R=existsSync(g),x=await je({filename:u.path,raw:u.content,config:t,baseColor:n$1,transformJsx:!t.tsx,isRemote:r$1.isRemote},[Ie,Ce,Re,ke,ve]);if(R){let b=await promises.readFile(g,"utf-8"),[I,k]=await Promise.all([Bt(b),Bt(x)]);if(I===k){c.push(S__default.relative(t.resolvedPaths.cwd,g));continue}}if(R&&!r$1.overwrite){i.stop(),r$1.rootSpinner&&r$1.rootSpinner.stop();let{overwrite:b}=await Qe({type:"confirm",name:"overwrite",message:`The file ${a.info(y)} already exists. Would you like to overwrite?`,initial:!1});if(!b){c.push(S__default.relative(t.resolvedPaths.cwd,g)),r$1.rootSpinner&&r$1.rootSpinner.start();continue}i?.start(),r$1.rootSpinner&&r$1.rootSpinner.start();}existsSync(h)||await promises.mkdir(h,{recursive:!0}),await promises.writeFile(g,x,"utf-8"),R?s.push(S__default.relative(t.resolvedPaths.cwd,g)):a$1.push(S__default.relative(t.resolvedPaths.cwd,g));}let l=[...a$1,...s,...c],m=await wi(l,t);if(s.push(...m),s=s.filter(u=>!a$1.includes(u)),!(a$1.length||s.length)&&!c.length&&i?.info("No files updated."),a$1=Array.from(new Set(a$1)),s=Array.from(new Set(s)),c=Array.from(new Set(c)),a$1.length){if(i?.succeed(`Created ${a$1.length} ${a$1.length===1?"file":"files"}:`),!r$1.silent)for(let u of a$1)q.log(`  - ${u}`);}else i?.stop();if(s.length&&(r(`Updated ${s.length} ${s.length===1?"file":"files"}:`,{silent:r$1.silent})?.info(),!r$1.silent))for(let u of s)q.log(`  - ${u}`);if(c.length&&(r(`Skipped ${c.length} ${s.length===1?"file":"files"}: (files might be identical, use --overwrite to overwrite)`,{silent:r$1.silent})?.info(),!r$1.silent))for(let u of c)q.log(`  - ${u}`);return r$1.silent||q.break(),{filesCreated:a$1,filesUpdated:s,filesSkipped:c}}function di(e,t,r){if(e.target){if(e.target.startsWith("~/"))return S__default.join(t.resolvedPaths.cwd,e.target.replace("~/",""));let n=e.target;return e.type==="registry:page"&&(n=yi(n,r.framework),!n)?"":r.isSrcDir?S__default.join(t.resolvedPaths.cwd,"src",n.replace("src/","")):S__default.join(t.resolvedPaths.cwd,n.replace("src/",""))}let i=ui(e,t),o=hi(e.path,i);return S__default.join(i,o)}function ui(e,t){return e.type==="registry:ui"?t.resolvedPaths.ui:e.type==="registry:lib"?t.resolvedPaths.lib:e.type==="registry:block"||e.type==="registry:component"?t.resolvedPaths.components:e.type==="registry:hook"?t.resolvedPaths.hooks:t.resolvedPaths.components}function gi(e,t){let r=e.map(a=>a.replace(/^\//,"")),i=t.replace(/^\//,""),o=i.split("/").slice(0,-1).join("/");if(!o)return "";let n=o.split("/");for(let a=n.length;a>0;a--){let s=n.slice(0,a).join("/");if(r.some(l=>l!==i&&l.startsWith(s+"/")))return "/"+s}return "/"+o}function hi(e,t){let r=e.replace(/^\/|\/$/g,""),i=t.replace(/^\/|\/$/g,""),o=r.split("/"),n=i.split("/"),a=n[n.length-1],s=o.findIndex(c=>c===a);return s===-1?o[o.length-1]:o.slice(s+1).join("/")}async function Bt(e){return e.replace(/\r\n/g,`
`).trim()}function yi(e,t){if(!t)return "";if(t==="next-app")return e;if(t==="next-pages"){let r=e.replace(/^app\//,"pages/");return r=r.replace(/\/page(\.[jt]sx?)$/,"$1"),r}if(t==="react-router"){let r=e.replace(/^app\//,"app/routes/");return r=r.replace(/\/page(\.[jt]sx?)$/,"$1"),r}if(t==="laravel"){let r=e.replace(/^app\//,"resources/js/pages/");return r=r.replace(/\/page(\.[jt]sx?)$/,"$1"),r}return ""}async function wi(e,t){let r=new Project({compilerOptions:{}}),i=await n(t.resolvedPaths.cwd),o=await loadConfig(t.resolvedPaths.cwd),n$1=[];if(!i||o.resultType==="failed")return [];for(let a of e){let s=S__default.resolve(t.resolvedPaths.cwd,a);if(!existsSync(s))continue;let c=await promises.readFile(s,"utf-8"),l=await promises.mkdtemp(S__default.join(tmpdir(),"shadcn-")),m=r.createSourceFile(S__default.join(l,basename(s)),c,{scriptKind:ScriptKind.TSX});if(![".tsx",".ts",".jsx",".js"].includes(m.getExtension()))continue;let f=m.getImportDeclarations();for(let u of f){let g=u.getModuleSpecifierValue();if(i?.aliasPrefix&&!g.startsWith(`${i.aliasPrefix}/`))continue;let y=await b(g,o);if(!y)continue;let h=xi(y,e,t);if(!h)continue;let R=bi(h,t,i);!R||R===g||(u.setModuleSpecifier(R),await promises.writeFile(s,m.getFullText(),"utf-8"),n$1.push(a));}}return n$1}function xi(e,t,r,i=[".tsx",".ts",".js",".jsx",".css"]){let o=S__default.normalize(r.resolvedPaths.cwd),n=t.map(R=>R.split(S__default.sep).join(S__default.posix.sep)),a=new Set(n),s=S__default.extname(e),c=s!=="",l=c?e.slice(0,-s.length):e,f=S__default.relative(o,l).split(S__default.sep).join(S__default.posix.sep),u=c?[s]:i,g=new Set;for(let R of u){let x=l+R,b=S__default.posix.normalize(S__default.relative(o,x));(a.has(b)||existsSync(x))&&g.add(b);let I=S__default.join(l,`index${R}`),k=S__default.posix.normalize(S__default.relative(o,I));(a.has(k)||existsSync(I))&&g.add(k);}let y=S__default.basename(l);for(let R of n)u.some(x=>R.endsWith(`/${y}${x}`))&&g.add(R);return g.size===0?null:Array.from(g).sort((R,x)=>{let b=S__default.posix.extname(R),I=S__default.posix.extname(x),k=u.indexOf(b)-u.indexOf(I);if(k!==0)return k;let F=f&&R.startsWith(f)?-1:1,j=f&&x.startsWith(f)?-1:1;return F-j})[0]}function bi(e,t,r){let i=S__default.normalize(S__default.join(t.resolvedPaths.cwd,e)),o=Object.entries(t.resolvedPaths).filter(([,y])=>y&&i.startsWith(S__default.normalize(y+S__default.sep))).sort((y,h)=>h[1].length-y[1].length);if(o.length===0)return null;let[n,a]=o[0],s=S__default.relative(a,i);s=s.split(S__default.sep).join("/");let c=S__default.posix.extname(s),m=[".ts",".tsx",".js",".jsx"].includes(c)?"":c,f=s.slice(0,s.length-c.length);f.endsWith("/index")&&(f=f.slice(0,-6));let u=n==="cwd"?r.aliasPrefix:t.aliases[n];if(!u)return null;let g=f===""?"":`/${f}`;return g=g.replace("/src",""),`${u}${g}${m}`}async function Ee(e,t,r){r={overwrite:!1,silent:!1,isNewProject:!1,style:"index",...r};let i=await j(t);return i&&i.ui&&i.ui.resolvedPaths.cwd!==t.resolvedPaths.cwd?await Ri(e,t,i,{...r,isRemote:e?.length===1&&!!e[0].match(/\/chat\/b\//)}):await Si(e,t,r)}async function Si(e,t$1,r$1){let i=r("Checking registry.",{silent:r$1.silent})?.start(),o=await U(e,t$1);if(!o)return i?.fail(),s(new Error("Failed to fetch components from registry."));i?.succeed();let n=await p(t$1);await t(o.tailwind?.config,t$1,{silent:r$1.silent,tailwindVersion:n});let a=await Gt(e,t$1);await Je(o.cssVars,t$1,{cleanupDefaultNextStyles:r$1.isNewProject,silent:r$1.silent,tailwindVersion:n,tailwindConfig:o.tailwind?.config,overwriteCssVars:a,initIndex:r$1.style?r$1.style==="index":!1}),await Ge(o.css,t$1,{silent:r$1.silent}),await X(o.dependencies,o.devDependencies,t$1,{silent:r$1.silent}),await qe(o.files,t$1,{overwrite:r$1.overwrite,silent:r$1.silent}),o.docs&&q.info(o.docs);}async function Ri(e,t$1,r$1,i){let o=r("Checking registry.",{silent:i.silent})?.start(),n=await X$1(e,t$1),a=await S$1(n),s$1=z.array(B$1).parse(a);if(!s$1)return o?.fail(),s(new Error("Failed to fetch components from registry."));o?.succeed();let c=Z$1(s$1),l$1=Y(),m=[],f=[],u=[],g=r("Installing components.")?.start();for(let h of s$1){let R=l$1.get(h.type),x=c.get(h.name);if(!R)continue;let b=h.type==="registry:ui"||x?.type==="registry:ui"?r$1.ui:t$1,I=await p(b),k$1=l(t$1.resolvedPaths.cwd,b.resolvedPaths.ui),F=await k(k$1,b.resolvedPaths.cwd)??b.resolvedPaths.cwd;if(h.tailwind?.config&&(await t(h.tailwind?.config,b,{silent:!0,tailwindVersion:I}),f.push(S__default.relative(k$1,b.resolvedPaths.tailwindConfig))),h.cssVars){let V=await Gt(e,t$1);await Je(h.cssVars,b,{silent:!0,tailwindVersion:I,tailwindConfig:h.tailwind?.config,overwriteCssVars:V}),f.push(S__default.relative(k$1,b.resolvedPaths.tailwindCss));}h.css&&(await Ge(h.css,b,{silent:!0}),f.push(S__default.relative(k$1,b.resolvedPaths.tailwindCss))),await X(h.dependencies,h.devDependencies,b,{silent:!0});let j=await qe(h.files,b,{overwrite:i.overwrite,silent:!0,rootSpinner:g,isRemote:i.isRemote});m.push(...j.filesCreated.map(V=>S__default.relative(k$1,S__default.join(F,V)))),f.push(...j.filesUpdated.map(V=>S__default.relative(k$1,S__default.join(F,V)))),u.push(...j.filesSkipped.map(V=>S__default.relative(k$1,S__default.join(F,V))));}if(g?.succeed(),m.sort(),f.sort(),u.sort(),!(m.length||f.length)&&!u.length&&r("No files updated.",{silent:i.silent})?.info(),m.length){r(`Created ${m.length} ${m.length===1?"file":"files"}:`,{silent:i.silent})?.succeed();for(let h of m)q.log(`  - ${h}`);}if(f.length){r(`Updated ${f.length} ${f.length===1?"file":"files"}:`,{silent:i.silent})?.info();for(let h of f)q.log(`  - ${h}`);}if(u.length){r(`Skipped ${u.length} ${f.length===1?"file":"files"}: (use --overwrite to overwrite)`,{silent:i.silent})?.info();for(let h of u)q.log(`  - ${h}`);}}async function Gt(e,t){let r=await X$1(e,t),i=await S$1(r);return z.array(B$1).parse(i).some(n=>n.type==="registry:theme"||n.type==="registry:style")}var Pi="https://codeload.github.com/shadcn-ui/ui/tar.gz/main",Q={next:"next","next-monorepo":"next-monorepo"};async function $e(e){e={srcDir:!1,...e};let t=e.template&&Q[e.template]?e.template:"next",r=t===Q.next?"my-app":"my-monorepo",i="latest",o=e.components?.length===1&&!!e.components[0].match(/\/chat\/b\//);if(e.components&&o)try{let[s]=await S$1(e.components),{meta:c}=z.object({meta:z.object({nextVersion:z.string()})}).parse(s);i=c.nextVersion,t=Q.next;}catch(s$1){q.break(),s(s$1);}if(!e.force){let{type:s,name:c}=await Qe([{type:e.template||o?null:"select",name:"type",message:`The path ${a.info(e.cwd)} does not contain a package.json file.
  Would you like to start a new project?`,choices:[{title:"Next.js",value:"next"},{title:"Next.js (Monorepo)",value:"next-monorepo"}],initial:0},{type:"text",name:"name",message:"What is your project named?",initial:r,format:l=>l.trim(),validate:l=>l.length>128?"Name should be less than 128 characters.":!0}]);t=s??t,r=c;}let n=await Se(e.cwd,{withFallback:!0}),a$1=`${e.cwd}/${r}`;try{await Z.access(e.cwd,Z.constants.W_OK);}catch{q.break(),q.error(`The path ${a.info(e.cwd)} is not writable.`),q.error(`It is likely you do not have write permissions for this folder or the path ${a.info(e.cwd)} does not exist.`),q.break(),process.exit(1);}return Z.existsSync(S__default.resolve(e.cwd,r,"package.json"))&&(q.break(),q.error(`A project with the name ${a.info(r)} already exists.`),q.error("Please choose a different name and try again."),q.break(),process.exit(1)),t===Q.next&&await Ci(a$1,{version:i,cwd:e.cwd,packageManager:n,srcDir:!!e.srcDir}),t===Q["next-monorepo"]&&await ki(a$1,{packageManager:n}),{projectPath:a$1,projectName:r,template:t}}async function Ci(e,t){let r$1=r("Creating a new Next.js project. This may take a few minutes.").start(),i=["--tailwind","--eslint","--typescript","--app",t.srcDir?"--src-dir":"--no-src-dir","--no-import-alias",`--use-${t.packageManager}`];(t.version.startsWith("15")||t.version.startsWith("latest")||t.version.startsWith("canary"))&&i.push("--turbopack");try{await execa("npx",[`create-next-app@${t.version}`,e,"--silent",...i],{cwd:t.cwd});}catch{q.break(),q.error("Something went wrong creating a new Next.js project. Please try again."),process.exit(1);}r$1?.succeed("Creating a new Next.js project.");}async function ki(e,t){let r$1=r("Creating a new Next.js monorepo. This may take a few minutes.").start();try{let i=S__default.join(vi.tmpdir(),`shadcn-template-${Date.now()}`);await Z.ensureDir(i);let o=await fetch(Pi);if(!o.ok)throw new Error(`Failed to download template: ${o.statusText}`);let n=S__default.resolve(i,"template.tar.gz");await Z.writeFile(n,Buffer.from(await o.arrayBuffer())),await execa("tar",["-xzf",n,"-C",i,"--strip-components=2","ui-main/templates/monorepo-next"]);let a=S__default.resolve(i,"monorepo-next");await Z.move(a,e),await Z.remove(i),await execa(t.packageManager,["install"],{cwd:e});let s=process.cwd();await execa("git",["--version"],{cwd:e}),await execa("git",["init"],{cwd:e}),await execa("git",["add","-A"],{cwd:e}),await execa("git",["commit","-m","Initial commit"],{cwd:e}),await execa("cd",[s]),r$1?.succeed("Creating a new Next.js monorepo.");}catch(i){r$1?.fail("Something went wrong creating a new Next.js monorepo."),s(i);}}async function Yt(e,t,r$1){if(!e)return;r$1={silent:!1,...r$1};let i=S__default.relative(t.resolvedPaths.cwd,t.resolvedPaths.tailwindConfig),o=r(`Updating ${a.info(i)}`,{silent:r$1.silent}).start(),n=await promises.readFile(t.resolvedPaths.tailwindConfig,"utf8"),a$1=await Ei(n,e,t);await promises.writeFile(t.resolvedPaths.tailwindConfig,a$1,"utf8"),o?.succeed();}async function Ei(e,t,r){let i=await u(e,r),o=i.getDescendantsOfKind(SyntaxKind.ObjectLiteralExpression).find(n=>n.getProperties().some(a=>a.isKind(SyntaxKind.PropertyAssignment)&&a.getName()==="content"));return o?(Ti(o,t),i.getFullText()):e}async function Ti(e,t){let r=v(e),i=e.getProperty("content");if(!i){let o={name:"content",initializer:`[${r}${t.join(`${r}, ${r}`)}${r}]`};return e.addPropertyAssignment(o),e}if(i.isKind(SyntaxKind.PropertyAssignment)){let o=i.getInitializer();if(o?.isKind(SyntaxKind.ArrayLiteralExpression))for(let n of t){let a=`${r}${n}${r}`;o.getElements().map(s=>s.getText()).includes(a)||o.addElement(a);}return e}return e}var Ni=z.object({cwd:z.string(),components:z.array(z.string()).optional(),yes:z.boolean(),defaults:z.boolean(),force:z.boolean(),silent:z.boolean(),isNewProject:z.boolean(),srcDir:z.boolean().optional(),cssVariables:z.boolean(),template:z.string().optional().refine(e=>e?Q[e]:!0,{message:"Invalid template. Please use 'next' or 'next-monorepo'."}),baseColor:z.string().optional().refine(e=>e?I.find(t=>t.name===e):!0,{message:`Invalid base color. Please use '${I.map(e=>e.name).join("', '")}'`}),style:z.string()}),qt=new Command().name("init").description("initialize your project and install dependencies").argument("[components...]","the components to add or a url to the component.").option("-t, --template <template>","the template to use. (next, next-monorepo)").option("-b, --base-color <base-color>","the base color to use. (neutral, gray, zinc, stone, slate)",void 0).option("-y, --yes","skip confirmation prompt.",!0).option("-d, --defaults,","use default configuration.",!1).option("-f, --force","force overwrite of existing configuration.",!1).option("-c, --cwd <cwd>","the working directory. defaults to the current directory.",process.cwd()).option("-s, --silent","mute output.",!1).option("--src-dir","use the src directory when creating a new project.",!1).option("--no-src-dir","do not use the src directory when creating a new project.").option("--css-variables","use css variables for theming.",!0).option("--no-css-variables","do not use css variables for theming.").action(async(e,t)=>{try{let r=Ni.parse({cwd:S__default.resolve(t.cwd),isNewProject:!1,components:e,style:"index",...t});if(e.length>0&&W(e[0])){let i=await M(e[0],"");i?.type==="registry:style"&&(r.baseColor="neutral",r.style=i.extends??"index");}await Ne(r),q.log(`${a.success("Success!")} Project initialization completed.
You may now add components.`),q.break();}catch(r){q.break(),s(r);}});async function Ne(e){let t,r$1;if(e.skipPreflight)t=await n(e.cwd);else {let l=await Ot(e);if(l.errors[A]){let{projectPath:m,template:f}=await $e(e);m||process.exit(1),e.cwd=m,e.isNewProject=!0,r$1=f;}t=l.projectInfo;}if(r$1==="next-monorepo")return e.cwd=S__default.resolve(e.cwd,"apps/web"),await h(e.cwd);let i$1=await o(e.cwd,t),o$1=i$1?await Fi(i$1,e):await Di(await h(e.cwd));if(!e.yes){let{proceed:l}=await Qe({type:"confirm",name:"proceed",message:`Write configuration to ${a.info("components.json")}. Proceed?`,initial:!0});l||process.exit(0);}let n$1=r("Writing components.json.").start(),a$1=S__default.resolve(e.cwd,"components.json");await promises.writeFile(a$1,JSON.stringify(o$1,null,2),"utf8"),n$1.succeed();let s=await i(e.cwd,o$1),c=[...e.style==="none"?[]:[e.style],...e.components??[]];return await Ee(c,s,{overwrite:!0,silent:e.silent,style:e.style,isNewProject:e.isNewProject||t?.framework.name==="next-app"}),e.isNewProject&&e.srcDir&&await Yt(["./src/**/*.{js,ts,jsx,tsx,mdx}"],s,{silent:e.silent}),s}async function Di(e$1=null){let[t,r]=await Promise.all([K$1(),N()]);q.info("");let i=await Qe([{type:"toggle",name:"typescript",message:`Would you like to use ${a.info("TypeScript")} (recommended)?`,initial:e$1?.tsx??!0,active:"yes",inactive:"no"},{type:"select",name:"style",message:`Which ${a.info("style")} would you like to use?`,choices:t.map(o=>({title:o.label,value:o.name}))},{type:"select",name:"tailwindBaseColor",message:`Which color would you like to use as the ${a.info("base color")}?`,choices:r.map(o=>({title:o.label,value:o.name}))},{type:"text",name:"tailwindCss",message:`Where is your ${a.info("global CSS")} file?`,initial:e$1?.tailwind.css??e},{type:"toggle",name:"tailwindCssVariables",message:`Would you like to use ${a.info("CSS variables")} for theming?`,initial:e$1?.tailwind.cssVariables??!0,active:"yes",inactive:"no"},{type:"text",name:"tailwindPrefix",message:`Are you using a custom ${a.info("tailwind prefix eg. tw-")}? (Leave blank if not)`,initial:""},{type:"text",name:"tailwindConfig",message:`Where is your ${a.info("tailwind.config.js")} located?`,initial:e$1?.tailwind.config??f},{type:"text",name:"components",message:`Configure the import alias for ${a.info("components")}:`,initial:e$1?.aliases.components??c},{type:"text",name:"utils",message:`Configure the import alias for ${a.info("utils")}:`,initial:e$1?.aliases.utils??d},{type:"toggle",name:"rsc",message:`Are you using ${a.info("React Server Components")}?`,initial:e$1?.rsc??!0,active:"yes",inactive:"no"}]);return g.parse({$schema:"https://ui.shadcn.com/schema.json",style:i.style,tailwind:{config:i.tailwindConfig,css:i.tailwindCss,baseColor:i.tailwindBaseColor,cssVariables:i.tailwindCssVariables,prefix:i.tailwindPrefix},rsc:i.rsc,tsx:i.typescript,aliases:{utils:i.utils,components:i.components,lib:i.components.replace(/\/components$/,"lib"),hooks:i.components.replace(/\/components$/,"hooks")}})}async function Fi(e,t){let r=e.style,i=t.baseColor,o=e.tailwind.cssVariables;if(!t.defaults){let[n,a$1,s]=await Promise.all([K$1(),N(),p(e)]),c=await Qe([{type:s==="v4"?null:"select",name:"style",message:`Which ${a.info("style")} would you like to use?`,choices:n.map(l=>({title:l.name==="new-york"?"New York (Recommended)":l.label,value:l.name})),initial:0},{type:t.baseColor?null:"select",name:"tailwindBaseColor",message:`Which color would you like to use as the ${a.info("base color")}?`,choices:a$1.map(l=>({title:l.label,value:l.name}))}]);r=c.style??"new-york",i=c.tailwindBaseColor??i,o=t.cssVariables;}return g.parse({$schema:e?.$schema,style:r,tailwind:{...e?.tailwind,baseColor:i,cssVariables:o},rsc:e?.rsc,tsx:e?.tsx,aliases:e?.aliases,iconLibrary:e?.iconLibrary})}async function Xt(e){let t={};if(!Z.existsSync(e.cwd)||!Z.existsSync(S__default.resolve(e.cwd,"package.json")))return t[A]=!0,{errors:t,config:null};if(!Z.existsSync(S__default.resolve(e.cwd,"components.json")))return t[_]=!0,{errors:t,config:null};try{let r=await h(e.cwd);return {errors:t,config:r}}catch{q.break(),q.error(`An invalid ${a.info("components.json")} file was found at ${a.info(e.cwd)}.
Before you can add components, you must create a valid ${a.info("components.json")} file by running the ${a.info("init")} command.`),q.error(`Learn more at ${a.info("https://ui.shadcn.com/docs/components-json")}.`),q.break(),process.exit(1);}}async function Zt(e,t){let r=S__default.join(t.resolvedPaths.cwd,"app/page.tsx");if(!(await B__default.stat(r)).isFile())return;let i=await M(e,t.style);if(!i?.meta?.importSpecifier||!i?.meta?.moduleSpecifier)return;let o=`import { ${i?.meta?.importSpecifier} } from "${i.meta.moduleSpecifier}"

export default function Page() {
  return <${i?.meta?.importSpecifier} />
}`;await B__default.writeFile(r,o,"utf8");}var tt=[{name:"toast",deprecatedBy:"sonner",message:"The toast component is deprecated. Use the sonner component instead."},{name:"toaster",deprecatedBy:"sonner",message:"The toaster component is deprecated. Use the sonner component instead."}],Li=z.object({components:z.array(z.string()).optional(),yes:z.boolean(),overwrite:z.boolean(),cwd:z.string(),all:z.boolean(),path:z.string().optional(),silent:z.boolean(),srcDir:z.boolean().optional(),cssVariables:z.boolean()}),tr=new Command().name("add").description("add a component to your project").argument("[components...]","the components to add or a url to the component.").option("-y, --yes","skip confirmation prompt.",!1).option("-o, --overwrite","overwrite existing files.",!1).option("-c, --cwd <cwd>","the working directory. defaults to the current directory.",process.cwd()).option("-a, --all","add all available components",!1).option("-p, --path <path>","the path to add the component to.").option("-s, --silent","mute output.",!1).option("--src-dir","use the src directory when creating a new project.",!1).option("--no-src-dir","do not use the src directory when creating a new project.").option("--css-variables","use css variables for theming.",!0).option("--no-css-variables","do not use css variables for theming.").action(async(e,t)=>{try{let r=Li.parse({components:e,cwd:S__default.resolve(t.cwd),...t}),i;if(e.length>0&&W(e[0])&&(i=(await M(e[0],""))?.type),!r.yes&&(i==="registry:style"||i==="registry:theme")){q.break();let{confirm:c}=await Qe({type:"confirm",name:"confirm",message:a.warn(`You are about to install a new ${i.replace("registry:","")}. 
Existing CSS variables and components will be overwritten. Continue?`)});c||(q.break(),q.log("Installation cancelled."),q.break(),process.exit(1));}if(r.components?.length||(r.components=await Vi(r)),(await n(r.cwd))?.tailwindVersion==="v4"){let c=tt.filter(l=>r.components?.includes(l.name));c?.length&&(q.break(),c.forEach(l=>{q.warn(a.warn(l.message));}),q.break(),process.exit(1));}let{errors:n$1,config:a$1}=await Xt(r);if(n$1[_]){let{proceed:c}=await Qe({type:"confirm",name:"proceed",message:`You need to create a ${a.info("components.json")} file to add components. Proceed?`,initial:!0});c||(q.break(),process.exit(1)),a$1=await Ne({cwd:r.cwd,yes:!0,force:!0,defaults:!1,skipPreflight:!1,silent:!0,isNewProject:!1,srcDir:r.srcDir,cssVariables:r.cssVariables,style:"index"});}let s=!1;if(n$1[A]){let{projectPath:c,template:l}=await $e({cwd:r.cwd,force:r.overwrite,srcDir:r.srcDir,components:r.components});c||(q.break(),process.exit(1)),r.cwd=c,l==="next-monorepo"?(r.cwd=S__default.resolve(r.cwd,"apps/web"),a$1=await h(r.cwd)):(a$1=await Ne({cwd:r.cwd,yes:!0,force:!0,defaults:!1,skipPreflight:!0,silent:!0,isNewProject:!0,srcDir:r.srcDir,cssVariables:r.cssVariables,style:"index"}),s=r.components?.length===1&&!!r.components[0].match(/\/chat\/b\//));}if(!a$1)throw new Error(`Failed to read config at ${a.info(r.cwd)}.`);await Ee(r.components,a$1,r),s&&await Zt(r.components[0],a$1);}catch(r){q.break(),s(r);}});async function Vi(e){let t=await J();if(!t)return q.break(),s(new Error("Failed to fetch registry index.")),[];if(e.all)return t.map(o=>o.name).filter(o=>!tt.some(n=>n.name===o));if(e.components?.length)return e.components;let{components:r}=await Qe({type:"multiselect",name:"components",message:"Which components would you like to add?",hint:"Space to select. A to toggle all. Enter to submit.",instructions:!1,choices:t.filter(o=>o.type==="registry:ui"&&!tt.some(n=>n.name===o.name)).map(o=>({title:o.name,value:o.name,selected:e.all?!0:e.components?.includes(o.name)}))});r?.length||(q.warn("No components selected. Exiting."),q.info(""),process.exit(1));let i=z.array(z.string()).safeParse(r);return i.success?i.data:(q.error(""),s(new Error("Something went wrong. Please try again.")),[])}async function or(e){let t={},r={cwd:e.cwd,registryFile:S__default.resolve(e.cwd,e.registryFile),outputDir:S__default.resolve(e.cwd,e.outputDir)};return Z.existsSync(r.registryFile)||(t[H]=!0),await Z.mkdir(r.outputDir,{recursive:!0}),Object.keys(t).length>0&&(t[H]&&(q.break(),q.error(`The path ${a.info(r.registryFile)} does not exist.`)),q.break(),process.exit(1)),{errors:t,resolvePaths:r}}var zi=z.object({cwd:z.string(),registryFile:z.string(),outputDir:z.string()}),nr=new Command().name("build").description("build components for a shadcn registry").argument("[registry]","path to registry.json file","./registry.json").option("-o, --output <path>","destination directory for json files","./public/r").option("-c, --cwd <cwd>","the working directory. defaults to the current directory.",process.cwd()).action(async(e,t)=>{try{let r$1=zi.parse({cwd:S.resolve(t.cwd),registryFile:e,outputDir:t.output}),{resolvePaths:i}=await or(r$1),o=await B.readFile(i.registryFile,"utf-8"),n=C.safeParse(JSON.parse(o));n.success||(q.error(`Invalid registry file found at ${a.info(i.registryFile)}.`),process.exit(1));let a$1=r("Building registry...");for(let s of n.data.items){if(!s.files)continue;a$1.start(`Building ${s.name}...`),s.$schema="https://ui.shadcn.com/schema/registry-item.json";for(let l of s.files)l.content=await B.readFile(S.resolve(i.cwd,l.path),"utf-8");let c=B$1.safeParse(s);if(!c.success){q.error(`Invalid registry item found for ${a.info(s.name)}.`);continue}await B.writeFile(S.resolve(i.outputDir,`${c.data.name}.json`),JSON.stringify(c.data,null,2));}a$1.succeed("Building registry.");}catch(r){q.break(),s(r);}});var Ki=z.object({component:z.string().optional(),yes:z.boolean(),cwd:z.string(),path:z.string().optional()}),ar=new Command().name("diff").description("check for updates against the registry").argument("[component]","the component name").option("-y, --yes","skip confirmation prompt.",!1).option("-c, --cwd <cwd>","the working directory. defaults to the current directory.",process.cwd()).action(async(e,t)=>{try{let r=Ki.parse({component:e,...t}),i=S__default.resolve(r.cwd);existsSync(i)||(q.error(`The path ${i} does not exist. Please try again.`),process.exit(1));let o=await h(i);o||(q.warn(`Configuration is missing. Please run ${a.success("init")} to create a components.json file.`),process.exit(1));let n=await J();if(n||(s(new Error("Failed to fetch registry index.")),process.exit(1)),!r.component){let c=o.resolvedPaths.components,l=n.filter(f=>{for(let u of f.files??[]){let g=S__default.resolve(c,typeof u=="string"?u:u.path);if(existsSync(g))return !0}return !1}),m=[];for(let f of l){let u=await sr(f,o);u.length&&m.push({name:f.name,changes:u});}m.length||(q.info("No updates found."),process.exit(0)),q.info("The following components have updates available:");for(let f of m){q.info(`- ${f.name}`);for(let u of f.changes)q.info(`  - ${u.filePath}`);}q.break(),q.info(`Run ${a.success("diff <component>")} to see the changes.`),process.exit(0);}let a$1=n.find(c=>c.name===r.component);a$1||(q.error(`The component ${a.success(r.component)} does not exist.`),process.exit(1));let s$1=await sr(a$1,o);s$1.length||(q.info(`No updates found for ${r.component}.`),process.exit(0));for(let c of s$1)q.info(`- ${c.filePath}`),await Gi(c.patch),q.info("");}catch(r){s(r);}});async function sr(e,t){let r=await Q$1(t.style,[e]),i=await O(t.tailwind.baseColor);if(!r)return [];let o=[];for(let n of r){let a=await R(t,n);if(a)for(let s of n.files??[]){let c=S__default.resolve(a,typeof s=="string"?s:s.path);if(!existsSync(c))continue;let l=await promises.readFile(c,"utf8");if(typeof s=="string"||!s.content)continue;let m=await je({filename:s.path,raw:s.content,config:t,baseColor:i}),f=diffLines(m,l);f.length>1&&o.push({filePath:c,patch:f});}}return o}async function Gi(e){e.forEach(t=>{if(t)return t.added?process.stdout.write(a.success(t.value)):t.removed?process.stdout.write(a.error(t.value)):process.stdout.write(t.value)});}var cr=new Command().name("info").description("get information about your project").option("-c, --cwd <cwd>","the working directory. defaults to the current directory.",process.cwd()).action(async e=>{q.info("> project info"),console.log(await n(e.cwd)),q.break(),q.info("> components.json"),console.log(await h(e.cwd));});async function pr(e){if(!e.resolvedPaths.ui)throw new Error("We could not find a valid `ui` path in your `components.json` file. Please ensure you have a valid `ui` path in your `components.json` file.");let t=e.resolvedPaths.ui,[r$1,i]=await Promise.all([Hi("**/*.{js,ts,jsx,tsx}",{cwd:t}),L$1()]);if(Object.keys(i).length===0)throw new Error("Something went wrong fetching the registry icons.");let o=Object.entries(L).map(([m,f])=>({title:f.name,value:m})),n=await Qe([{type:"select",name:"sourceLibrary",message:`Which icon library would you like to ${a.info("migrate from")}?`,choices:o},{type:"select",name:"targetLibrary",message:`Which icon library would you like to ${a.info("migrate to")}?`,choices:o}]);if(n.sourceLibrary===n.targetLibrary)throw new Error("You cannot migrate to the same icon library. Please choose a different icon library.");if(!(n.sourceLibrary in L&&n.targetLibrary in L))throw new Error("Invalid icon library. Please choose a valid icon library.");let a$1=L[n.sourceLibrary],s=L[n.targetLibrary],{confirm:c}=await Qe({type:"confirm",name:"confirm",initial:!0,message:`We will migrate ${a.info(r$1.length)} files in ${a.info(`./${S__default.relative(e.resolvedPaths.cwd,t)}`)} from ${a.info(a$1.name)} to ${a.info(s.name)}. Continue?`});c||(q.info("Migration cancelled."),process.exit(0)),s.package&&await X([s.package],[],e,{silent:!1});let l=r("Migrating icons...")?.start();await Promise.all(r$1.map(async m=>{l.text=`Migrating ${m}...`;let f=S__default.join(t,m),u=await promises.readFile(f,"utf-8"),g=await eo(u,n.sourceLibrary,n.targetLibrary,i);await promises.writeFile(f,g);})),l.succeed("Migration complete.");}async function eo(e,t,r,i){let o=L[t]?.import,n=L[r]?.import,a=await promises.mkdtemp(S__default.join(tmpdir(),"shadcn-")),s=new Project({compilerOptions:{}}),c=S__default.join(a,`shadcn-icons-${randomBytes(4).toString("hex")}.tsx`),l=s.createSourceFile(c,e,{scriptKind:ScriptKind.TSX}),m=[];for(let f of l.getImportDeclarations()??[])if(f.getModuleSpecifier()?.getText()===`"${o}"`){for(let u of f.getNamedImports()??[]){let g=u.getName(),y=Object.values(i).find(h=>h[t]===g)?.[r];!y||m.includes(y)||(m.push(y),u.remove(),l.getDescendantsOfKind(SyntaxKind.JsxSelfClosingElement).filter(h=>h.getTagNameNode()?.getText()===g).forEach(h=>h.getTagNameNode()?.replaceWithText(y)));}f.getNamedImports()?.length===0&&f.remove();}return m.length>0&&l.addImportDeclaration({moduleSpecifier:n,namedImports:m.map(f=>({name:f}))}),await l.getText()}function io(e){return e.split("-").map(t=>t.charAt(0).toUpperCase()+t.slice(1)).join("")}function oo(e,t,r,i){let n=e.replace(/\/\/.*$/gm,"").replace(/\/\*[\s\S]*?\*\//g,"").replace(/\s+/g," ").trim().split(",").map(a=>a.trim()).filter(Boolean);for(let a of n){let s=a.match(/^type\s+(\w+)(?:\s+as\s+(\w+))?$/),c=a.match(/^(\w+)\s+as\s+(\w+)$/);if(s){let l=s[1],m=s[2];i==="slot"&&l==="Slot"&&!m?r.push({name:"Slot",alias:"SlotPrimitive",isType:!0}):r.push({name:l,alias:m,isType:!0});}else if(c){let l=c[1],m=c[2];i==="slot"&&l==="Slot"&&m==="Slot"?r.push({name:"Slot",alias:"SlotPrimitive",isType:t}):r.push({name:l,alias:m,isType:t});}else i==="slot"&&a==="Slot"?r.push({name:"Slot",alias:"SlotPrimitive",isType:t}):r.push({name:a,isType:t});}}async function mr(e,t={}){if(!e.resolvedPaths.ui)throw new Error("We could not find a valid `ui` path in your `components.json` file. Please ensure you have a valid `ui` path in your `components.json` file.");let r$1=e.resolvedPaths.ui,i=await Hi("**/*.{js,ts,jsx,tsx}",{cwd:r$1});if(!t.yes){let{confirm:s}=await Qe({type:"confirm",name:"confirm",initial:!0,message:`We will migrate ${a.info(i.length)} files in ${a.info(`./${S__default.relative(e.resolvedPaths.cwd,r$1)}`)} to ${a.info("radix-ui")}. Continue?`});s||(q.info("Migration cancelled."),process.exit(0));}let o=r("Migrating imports...")?.start(),n=new Set;await Promise.all(i.map(async s=>{o.text=`Migrating ${s}...`;let c=S__default.join(r$1,s),l=await promises.readFile(c,"utf-8"),{content:m,replacedPackages:f}=await no(l);f.forEach(u=>n.add(u)),await promises.writeFile(c,m);})),o.succeed("Migrating imports.");let a$1=r("Updating package.json...")?.start();try{let s=m(e.resolvedPaths.cwd,!1);if(!s){a$1.fail("Could not read package.json"),q.warn("Could not update package.json. You may need to manually replace @radix-ui/react-* packages with radix-ui");return}let c=Array.from(n),l=["dependencies","devDependencies"];for(let m of l)if(s[m])for(let f of c)s[m][f]&&delete s[m][f];if(c.length>0){s.dependencies||(s.dependencies={}),s.dependencies["radix-ui"]="latest";let m=S__default.join(e.resolvedPaths.cwd,"package.json");await promises.writeFile(m,JSON.stringify(s,null,2)+`
`),a$1.succeed("Updated package.json."),await X(["radix-ui"],[],e,{silent:!1});}else a$1.succeed("No packages found in source files.");}catch{a$1.fail("Failed to update package.json"),q.warn("You may need to manually replace @radix-ui/react-* packages with radix-ui");}}async function no(e){let t=/import\s+(?:(type)\s+)?(?:\*\s+as\s+(\w+)|{([^}]+)})\s+from\s+(["'])@radix-ui\/react-([^"']+)\4(;?)/g,r=[],i=[],o=[],n='"',a=!1,s=e,c;for(;(c=t.exec(e))!==null;){let[y,h,R,x,b,I,k]=c;if(I==="icons"||I.startsWith("icons/"))continue;i.push(y),i.length===1&&(n=b,a=k===";"),o.push(`@radix-ui/react-${I}`);let F=!!h;if(R){let j=io(I);r.push({name:j,alias:R,isType:F});}else x&&oo(x,F,r,I);}if(r.length===0)return {content:e,replacedPackages:[]};let l=r.filter((y,h,R)=>h===R.findIndex(x=>x.name===y.name&&x.alias===y.alias&&x.isType===y.isType)),f=`import { ${l.map(y=>{let h=y.isType?"type ":"";return y.alias?`${h}${y.name} as ${y.alias}`:`${h}${y.name}`}).join(", ")} } from ${n}radix-ui${n}${a?";":""}`;s=i.reduce((y,h,R)=>y.replace(h,R===0?f:""),s),s=s.replace(/\n\s*\n\s*\n/g,`

`),l.some(y=>y.name==="Slot"&&y.alias==="SlotPrimitive")&&(s=s.split(`
`).map(R=>{if(R.trim().startsWith("import "))return R;let x=R;return x=x.replace(/\b(asChild\s*\?\s*)Slot(\s*:)/g,"$1__SLOT_PLACEHOLDER__$2"),x=x.replace(/\bReact\.ComponentProps<typeof\s+Slot>/g,"React.ComponentProps<typeof __SLOT_PLACEHOLDER__>"),x=x.replace(/\bComponentProps<typeof\s+Slot>/g,"ComponentProps<typeof __SLOT_PLACEHOLDER__>"),x=x.replace(/(<\/?)Slot(\s*\/?>)/g,"$1__SLOT_PLACEHOLDER__$2"),x=x.replace(/\bSlot\b/g,(b,I,k)=>{let F=k.substring(0,I),j=(F.match(/"/g)||[]).length,V=(F.match(/'/g)||[]).length;return j%2!==0||V%2!==0?b:"__SLOT_PLACEHOLDER__"}),x=x.replace(/__SLOT_PLACEHOLDER__/g,"SlotPrimitive.Slot"),x}).join(`
`));let g=Array.from(new Set(o));return {content:s,replacedPackages:g}}async function dr(e){let t={};if(!Z.existsSync(e.cwd)||!Z.existsSync(S__default.resolve(e.cwd,"package.json")))return t[A]=!0,{errors:t,config:null};if(!Z.existsSync(S__default.resolve(e.cwd,"components.json")))return t[_]=!0,{errors:t,config:null};try{let r=await h(e.cwd);return {errors:t,config:r}}catch{q.break(),q.error(`An invalid ${a.info("components.json")} file was found at ${a.info(e.cwd)}.
Before you can run a migration, you must create a valid ${a.info("components.json")} file by running the ${a.info("init")} command.`),q.error(`Learn more at ${a.info("https://ui.shadcn.com/docs/components-json")}.`),q.break(),process.exit(1);}}var ur=[{name:"icons",description:"migrate your ui components to a different icon library."},{name:"radix",description:"migrate to radix-ui."}],co=z.object({cwd:z.string(),list:z.boolean(),yes:z.boolean(),migration:z.string().refine(e=>e&&ur.some(t=>t.name===e),{message:"You must specify a valid migration. Run `shadcn migrate --list` to see available migrations."}).optional()}),gr=new Command().name("migrate").description("run a migration.").argument("[migration]","the migration to run.").option("-c, --cwd <cwd>","the working directory. defaults to the current directory.",process.cwd()).option("-l, --list","list all migrations.",!1).option("-y, --yes","skip confirmation prompt.",!1).action(async(e,t)=>{try{let r=co.parse({cwd:S__default.resolve(t.cwd),migration:e,list:t.list,yes:t.yes});if(r.list||!r.migration){q.info("Available migrations:");for(let n of ur)q.info(`- ${n.name}: ${n.description}`);return}if(!r.migration)throw new Error("You must specify a migration. Run `shadcn migrate --list` to see available migrations.");let{errors:i,config:o}=await dr(r);if(i[A]||i[_])throw new Error("No `components.json` file found. Ensure you are at the root of your project.");if(!o)throw new Error("Something went wrong reading your `components.json` file. Please ensure you have a valid `components.json` file.");r.migration==="icons"&&await pr(o),r.migration==="radix"&&await mr(o,{yes:r.yes});}catch(r){q.break(),s(r);}});async function hr(e){let t={},r={cwd:e.cwd,registryFile:S__default.resolve(e.cwd,e.registryFile),outputDir:S__default.resolve(e.cwd,e.outputDir)};if(!Z.existsSync(r.registryFile))return t[H]=!0,{errors:t,resolvePaths:null,config:null};if(!Z.existsSync(S__default.resolve(e.cwd,"components.json")))return t[_]=!0,{errors:t,resolvePaths:null,config:null};await Z.mkdir(r.outputDir,{recursive:!0});try{let i=await h(e.cwd);return {errors:t,config:i,resolvePaths:r}}catch{q.break(),q.error(`An invalid ${a.info("components.json")} file was found at ${a.info(e.cwd)}.
Before you can build the registry, you must create a valid ${a.info("components.json")} file by running the ${a.info("init")} command.`),q.break(),process.exit(1);}}var yr=[".tsx",".ts",".jsx",".js",".css"],wr=["lib/utils.ts"],uo=[/^(react|react-dom|next)(\/.*)?$/,/^(node|jsr|npm):.*$/],go=new Project({compilerOptions:{}});function ho(e){if(uo.some(t=>t.test(e)))return null;if(!e.startsWith("@")&&e.includes("/")&&(e=e.split("/")[0]),e.startsWith("@")){let t=e.split("/");t.length>2&&(e=t.slice(0,2).join("/"));}return e}async function pt(e,t,r,i=new Set){let o=S.resolve(t.resolvedPaths.cwd,e),n=S.relative(t.resolvedPaths.cwd,o);if(wr.includes(n))return {dependencies:[],files:[]};let a=S.extname(e);if(!yr.includes(a))return {dependencies:[],files:[]};if(i.has(n))return {dependencies:[],files:[]};if(i.add(n),!(await B.stat(o)).isFile())return {dependencies:[],files:[]};let c=await B.readFile(o,"utf-8"),l=await yo(S.basename(o)),m=go.createSourceFile(l,c,{scriptKind:ScriptKind.TSX}),f=await loadConfig(t.resolvedPaths.cwd);if(f.resultType==="failed")return {dependencies:[],files:[]};let u=[],g=new Set,y=xr(e),h={path:n,type:y,target:""};u.push(h);let R=m.getImportDeclarations();for(let b$1 of R){let I=b$1.getModuleSpecifierValue(),k=I.startsWith(".");if(!I.startsWith(`${r.aliasPrefix}/`)&&!k){let M=ho(I);M&&g.add(M);continue}let j=await b(I,f);if(k&&(j=S.resolve(S.dirname(o),I)),!j)continue;if(!S.extname(j))for(let M of yr){let ft=`${j}${M}`;try{await B.access(ft),j=ft;break}catch{continue}}let fe=S.relative(t.resolvedPaths.cwd,j);if(i.has(fe)||wr.includes(fe))continue;let _e=xr(I),mt={path:fe,type:_e,target:""};(_e==="registry:page"||_e==="registry:file")&&(mt.target=I),u.push(mt);let de=await pt(fe,t,r,i);if(de.files)for(let M of de.files)i.has(M.path)||(i.add(M.path),u.push(M));de.dependencies&&de.dependencies.forEach(M=>g.add(M));}let x=Array.from(new Map(u.map(b=>[b.path,b])).values());return {dependencies:Array.from(g),files:x}}async function yo(e){let t=await B.mkdtemp(S.join(tmpdir(),"shadcn-"));return S.join(t,e)}function xr(e){return e.includes("/ui/")?"registry:ui":e.includes("/lib/")?"registry:lib":e.includes("/hooks/")?"registry:hook":(e.includes("/components/"),"registry:component")}var xo=z.object({cwd:z.string(),registryFile:z.string(),outputDir:z.string(),verbose:z.boolean().optional().default(!1)}),br=new Command().name("registry:build").description("builds the registry [EXPERIMENTAL]").argument("[registry]","path to registry.json file","./registry.json").option("-o, --output <path>","destination directory for json files","./public/r").option("-c, --cwd <cwd>","the working directory. defaults to the current directory.",process.cwd()).option("-v, --verbose","verbose output").action(async(e,t)=>{await bo({cwd:S.resolve(t.cwd),registryFile:e,outputDir:t.output,verbose:t.verbose});});async function bo(e){try{let t=xo.parse(e),[{errors:r$1,resolvePaths:i,config:o},n$1]=await Promise.all([hr(t),n(t.cwd)]);(r$1[_]||!o||!n$1)&&(q.error(`A ${a.info("components.json")} file is required to build the registry. Run ${a.info("shadcn init")} to create one.`),q.break(),process.exit(1)),(r$1[H]||!i)&&(q.error(`We could not find a registry file at ${a.info(S.resolve(t.cwd,t.registryFile))}.`),q.break(),process.exit(1));let a$1=await B.readFile(i.registryFile,"utf-8"),s=C.safeParse(JSON.parse(a$1));s.success||(q.error(`Invalid registry file found at ${a.info(i.registryFile)}.`),q.break(),process.exit(1));let c=r("Building registry..."),l=await So(s.data,o,n$1);for(let m of l.items)m.files=m.files?.filter((f,u,g)=>u===g.findIndex(y=>y.path===f.path)),m.dependencies&&(m.dependencies=m.dependencies.filter((f,u,g)=>u===g.findIndex(y=>y===f)));for(let m of l.items){if(!m.files)continue;c.start(`Building ${m.name}...`),m.$schema="https://ui.shadcn.com/schema/registry-item.json";for(let u of m.files){let g=S.resolve(i.cwd,u.path);try{if(!(await B.stat(g)).isFile())continue;u.content=await B.readFile(g,"utf-8");}catch(y){console.error("Error reading file in registry build:",g,y);continue}}let f=B$1.safeParse(m);if(!f.success){q.error(`Invalid registry item found for ${a.info(m.name)}.`);continue}await B.writeFile(S.resolve(i.outputDir,`${f.data.name}.json`),JSON.stringify(f.data,null,2));}if(await B.copyFile(i.registryFile,S.resolve(i.outputDir,"registry.json")),c.succeed("Building registry."),t.verbose){r(`The registry has ${a.info(l.items.length.toString())} items:`).succeed();for(let m of l.items){q.log(`  - ${m.name} (${a.info(m.type)})`);for(let f of m.files??[])q.log(`    - ${f.path}`);}}}catch(t){q.break(),s(t);}}async function So(e,t,r){for(let i of e.items)if(i.files?.length)for(let o of i.files){let n=await pt(o.path,t,r);n.files=n.files?.filter(a=>a.path!==o.path),n.files&&i.files.push(...n.files),n.dependencies&&(i.dependencies=i.dependencies?i.dependencies.concat(n.dependencies):n.dependencies);}return e}var Sr=new Command().name("registry:mcp").description("starts the registry MCP server [EXPERIMENTAL]").option("-c, --cwd <cwd>","the working directory. defaults to the current directory.",process.cwd()).action(async()=>{try{let e=new StdioServerTransport;await a$1.connect(e);}catch(e){q.break(),s(e);}});var Rr={name:"shadcn",version:"2.6.4",description:"Add components to your apps.",publishConfig:{access:"public"},license:"MIT",author:{name:"shadcn",url:"https://twitter.com/shadcn"},repository:{type:"git",url:"https://github.com/shadcn/ui.git",directory:"packages/shadcn"},files:["dist"],keywords:["components","ui","tailwind","radix-ui","shadcn"],type:"module",exports:{".":{types:"./dist/index.d.ts",default:"./dist/index.js"},"./registry":{types:"./dist/registry/index.d.ts",default:"./dist/registry/index.js"},"./mcp":{types:"./dist/mcp/index.d.ts",default:"./dist/mcp/index.js"}},bin:"./dist/index.js",scripts:{dev:"tsup --watch",build:"tsup",typecheck:"tsc --noEmit",clean:"rimraf dist && rimraf components","start:dev":"cross-env REGISTRY_URL=http://localhost:4000/r node dist/index.js","start:prod":"cross-env REGISTRY_URL=https://ui.shadcn.com/r node dist/index.js",start:"node dist/index.js","format:write":'prettier --write "**/*.{ts,tsx,mdx}" --cache',"format:check":'prettier --check "**/*.{ts,tsx,mdx}" --cache',release:"changeset version","pub:beta":"pnpm build && pnpm publish --no-git-checks --access public --tag beta","pub:next":"pnpm build && pnpm publish --no-git-checks --access public --tag next","pub:release":"pnpm build && pnpm publish --access public",test:"vitest run","test:dev":"REGISTRY_URL=http://localhost:4000/r vitest run"},dependencies:{"@antfu/ni":"^23.2.0","@babel/core":"^7.22.1","@babel/parser":"^7.22.6","@babel/plugin-transform-typescript":"^7.22.5","@modelcontextprotocol/sdk":"^1.10.2",commander:"^10.0.0",cosmiconfig:"^8.1.3",deepmerge:"^4.3.1",diff:"^5.1.0",execa:"^7.0.0","fast-glob":"^3.3.2","fs-extra":"^11.1.0","https-proxy-agent":"^6.2.0",kleur:"^4.1.5",msw:"^2.7.1","node-fetch":"^3.3.0",ora:"^6.1.2",postcss:"^8.4.24",prompts:"^2.4.2",recast:"^0.23.2","stringify-object":"^5.0.0","ts-morph":"^18.0.0","tsconfig-paths":"^4.2.0",zod:"^3.20.2","zod-to-json-schema":"^3.24.5"},devDependencies:{"@types/babel__core":"^7.20.1","@types/diff":"^5.0.3","@types/fs-extra":"^11.0.1","@types/prompts":"^2.4.2","@types/stringify-object":"^4.0.5",rimraf:"^6.0.1",tsup:"^6.6.3","type-fest":"^3.8.0",typescript:"^4.9.3"}};process.on("SIGINT",()=>process.exit(0));process.on("SIGTERM",()=>process.exit(0));async function Co(){let e=new Command().name("shadcn").description("add components and dependencies to your project").version(Rr.version,"-v, --version","display the version number");e.addCommand(qt).addCommand(tr).addCommand(ar).addCommand(gr).addCommand(cr).addCommand(nr),e.addCommand(br).addCommand(Sr),e.parse();}Co();
//# sourceMappingURL=out.js.map
//# sourceMappingURL=index.js.map